{"ast":null,"code":"var _jsxFileName = \"/Users/tan/Documents/GitHub/connectform/connectform/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SimpleTimer from \"./components/Timer/SimpleTimer\";\nimport MyTypeTest from \"./components/MyTypeTest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [wordCount, setWordCount] = useState(\"0\");\n  const [value, setValue] = useState(\"\");\n  const [isStarted, setIsStarted] = useState(false);\n  const [seconds, setSeconds] = useState(60);\n  const [stuff, setStuff] = useState(\"\");\n  const [swear, setSwear] = useState(1);\n  const inputRef = useRef(null);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValue(oldValue => value);\n  };\n\n  const handleStart = () => {\n    setIsStarted(isStarted => !isStarted);\n    inputRef.current.disabled = false;\n    inputRef.current.focus();\n  };\n\n  const handleStop = () => {\n    handleSubmit();\n    setIsStarted(isStarted => !isStarted);\n    setSeconds(60);\n    inputRef.current.disabled = true;\n  };\n\n  const handleSubmit = event => {\n    if (value === \"\") {\n      return;\n    }\n\n    setWordCount(value.match(/(\\w+)/g).length);\n  };\n\n  const eraseText = () => {\n    document.getElementById(\"test\").value = \"\";\n    setValue(\"\");\n  };\n\n  const handleReset = () => {\n    setSeconds(60);\n    setWordCount(0);\n    eraseText();\n  }; // const setDisabled = () => {\n  //   if (seconds < 1) {\n  //     return true\n  //   } else {\n  //     return false\n  //   }\n  // }\n\n\n  const ResetButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset\",\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n\n  const StartButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"startButton\",\n      onClick: handleStart // disabled={setDisabled}\n      ,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  };\n\n  const StopButton = () => {\n    // setSeconds(60)\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"stopButton\",\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  };\n\n  const PlaceHoldersButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"placeHolder\",\n      children: \"Im a placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  };\n\n  const hint = !isStarted ? \"Click the START button!\" : \"Start Typing Now!\";\n\n  class Toggle extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isToggleOn: true\n      };\n      this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n      this.setState(prevState => ({\n        isToggleOn: !prevState.isToggleOn\n      }));\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: this.state.isToggleOn ? \"ON\" : \"OFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this);\n    }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!isStarted ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Typing Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Start Typing!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(MyTypeTest, {\n      isStarted: isStarted,\n      swear: swear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), isStarted ? /*#__PURE__*/_jsxDEV(StopButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(StartButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"inputBox\",\n      id: \"test\",\n      onChange: handleChange,\n      disabled: !isStarted,\n      placeholder: hint,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), isStarted ? /*#__PURE__*/_jsxDEV(SimpleTimer, {\n      seconds: seconds,\n      isStarted: isStarted,\n      stopTimer: x => setIsStarted(x),\n      timerSubmit: () => handleStop(),\n      setTimeRemaining: x => setSeconds(x)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Word Count : \", wordCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(PlaceHoldersButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), !isStarted ? /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9piK6krc4ael6O54tTeT2BZPl8A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tan/Documents/GitHub/connectform/connectform/src/App.js"],"names":["React","useState","useEffect","useRef","SimpleTimer","MyTypeTest","App","wordCount","setWordCount","value","setValue","isStarted","setIsStarted","seconds","setSeconds","stuff","setStuff","swear","setSwear","inputRef","handleChange","e","name","target","oldValue","handleStart","current","disabled","focus","handleStop","handleSubmit","event","match","length","eraseText","document","getElementById","handleReset","ResetButton","StartButton","StopButton","PlaceHoldersButton","hint","Toggle","Component","constructor","props","state","isToggleOn","handleClick","bind","setState","prevState","render","x"],"mappings":"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","sourcesContent":["import \"./App.css\"\nimport React, { useState, useEffect, useRef } from \"react\"\nimport SimpleTimer from \"./components/Timer/SimpleTimer\"\nimport MyTypeTest from \"./components/MyTypeTest\"\n\nfunction App() {\n  const [wordCount, setWordCount] = useState(\"0\")\n  const [value, setValue] = useState(\"\")\n  const [isStarted, setIsStarted] = useState(false)\n  const [seconds, setSeconds] = useState(60)\n  const [stuff, setStuff] = useState(\"\")\n  const [swear, setSwear] = useState(1)\n  const inputRef = useRef(null)\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setValue((oldValue) => value)\n  }\n\n  const handleStart = () => {\n    setIsStarted((isStarted) => !isStarted)\n    inputRef.current.disabled = false\n    inputRef.current.focus()\n  }\n  const handleStop = () => {\n    handleSubmit()\n    setIsStarted((isStarted) => !isStarted)\n    setSeconds(60)\n    inputRef.current.disabled = true\n  }\n  const handleSubmit = (event) => {\n    if (value === \"\") {\n      return\n    }\n    setWordCount(value.match(/(\\w+)/g).length)\n  }\n  const eraseText = () => {\n    document.getElementById(\"test\").value = \"\"\n    setValue(\"\")\n  }\n  const handleReset = () => {\n    setSeconds(60)\n    setWordCount(0)\n    eraseText()\n  }\n\n  // const setDisabled = () => {\n  //   if (seconds < 1) {\n  //     return true\n  //   } else {\n  //     return false\n  //   }\n  // }\n\n  const ResetButton = () => {\n    return (\n      <button className=\"reset\" onClick={handleReset}>\n        Reset\n      </button>\n    )\n  }\n\n  const StartButton = () => {\n    return (\n      <button\n        className=\"startButton\"\n        onClick={handleStart}\n        // disabled={setDisabled}\n      >\n        Start\n      </button>\n    )\n  }\n  const StopButton = () => {\n    // setSeconds(60)\n    return (\n      <button className=\"stopButton\" onClick={handleStop}>\n        Stop\n      </button>\n    )\n  }\n\n  const PlaceHoldersButton = () => {\n    return <button className=\"placeHolder\">Im a placeholder</button>\n  }\n\n  const hint = !isStarted ? \"Click the START button!\" : \"Start Typing Now!\"\n\n  class Toggle extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = { isToggleOn: true }\n      this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n      this.setState((prevState) => ({\n        isToggleOn: !prevState.isToggleOn,\n      }))\n    }\n\n    render() {\n      return (\n        <button onClick={this.handleClick}>\n          {this.state.isToggleOn ? \"ON\" : \"OFF\"}\n        </button>\n      )\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {!isStarted ? <h1>Typing Test</h1> : <h1>Start Typing!</h1>}\n      <MyTypeTest isStarted={isStarted} swear={swear} />\n      {isStarted ? <StopButton /> : <StartButton />}\n\n      <textarea\n        className=\"inputBox\"\n        id=\"test\"\n        onChange={handleChange}\n        disabled={!isStarted}\n        placeholder={hint}\n        ref={inputRef}\n      />\n      {isStarted ? (\n        <SimpleTimer\n          seconds={seconds}\n          isStarted={isStarted}\n          stopTimer={(x) => setIsStarted(x)}\n          timerSubmit={() => handleStop()}\n          setTimeRemaining={(x) => setSeconds(x)}\n        />\n      ) : (\n        <>\n          {\" \"}\n          <h2>Word Count : {wordCount}</h2>\n        </>\n      )}\n\n      <PlaceHoldersButton />\n      {!isStarted ? <ResetButton /> : <></>}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}