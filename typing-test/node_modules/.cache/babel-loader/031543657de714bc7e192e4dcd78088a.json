{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var SimpleTimer=function SimpleTimer(props){var seconds=props.seconds,isStarted=props.isStarted,stopTimer=props.stopTimer,timerSubmit=props.timerSubmit,setTimeRemaining=props.setTimeRemaining;useEffect(function(){if(seconds>0&&isStarted){setTimeout(function(){setTimeRemaining(function(time){return time-1;});},1000);}else if(seconds<1){timerSubmit();}},[seconds,isStarted,seconds]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h2\",{children:[\"Time remaining: \",seconds]})});};export default SimpleTimer;","map":{"version":3,"sources":["/Users/tan/Documents/GitHub/connectform/connectform/src/components/Timer/SimpleTimer/index.jsx"],"names":["React","useState","useEffect","SimpleTimer","props","seconds","isStarted","stopTimer","timerSubmit","setTimeRemaining","setTimeout","time"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,IACrBC,CAAAA,OADqB,CAC4CD,KAD5C,CACrBC,OADqB,CACZC,SADY,CAC4CF,KAD5C,CACZE,SADY,CACDC,SADC,CAC4CH,KAD5C,CACDG,SADC,CACUC,WADV,CAC4CJ,KAD5C,CACUI,WADV,CACuBC,gBADvB,CAC4CL,KAD5C,CACuBK,gBADvB,CAG7BP,SAAS,CAAC,UAAM,CACd,GAAIG,OAAO,CAAG,CAAV,EAAeC,SAAnB,CAA8B,CAC5BI,UAAU,CAAC,UAAM,CACfD,gBAAgB,CAAC,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAAG,CAAjB,EAAD,CAAhB,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CAJD,IAIO,IAAIN,OAAO,CAAG,CAAd,CAAiB,CACtBG,WAAW,GACZ,CACF,CARQ,CAQN,CAACH,OAAD,CAAUC,SAAV,CAAqBD,OAArB,CARM,CAAT,CAUA,mBACE,kCACE,yCAAqBA,OAArB,GADF,EADF,CAKD,CAlBD,CAoBA,cAAeF,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nconst SimpleTimer = (props) => {\n  const { seconds, isStarted, stopTimer, timerSubmit, setTimeRemaining } = props\n\n  useEffect(() => {\n    if (seconds > 0 && isStarted) {\n      setTimeout(() => {\n        setTimeRemaining((time) => time - 1)\n      }, 1000)\n    } else if (seconds < 1) {\n      timerSubmit()\n    }\n  }, [seconds, isStarted, seconds])\n\n  return (\n    <div>\n      <h2>Time remaining: {seconds}</h2>\n    </div>\n  )\n}\n\nexport default SimpleTimer\n"]},"metadata":{},"sourceType":"module"}