{"ast":null,"code":"var _jsxFileName = \"/Users/tan/Documents/GitHub/connectform/connectform/src/components/Timer/SimpleTimer/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleTimer = props => {\n  _s();\n\n  const {\n    seconds,\n    isStarted,\n    stopTimer,\n    timerSubmit,\n    setTimeRemaining\n  } = props;\n  useEffect(() => {\n    if (seconds > 0 && isStarted) {\n      setTimeout(() => {\n        setTimeRemaining(time => time - 1);\n      }, 1000);\n    } else if (seconds < 1) {\n      timerSubmit();\n    }\n  }, [seconds, isStarted, seconds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time remaining: \", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleTimer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SimpleTimer;\nexport default SimpleTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleTimer\");","map":{"version":3,"sources":["/Users/tan/Documents/GitHub/connectform/connectform/src/components/Timer/SimpleTimer/index.jsx"],"names":["React","useState","useEffect","SimpleTimer","props","seconds","isStarted","stopTimer","timerSubmit","setTimeRemaining","setTimeout","time"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA,WAAjC;AAA8CC,IAAAA;AAA9C,MAAmEL,KAAzE;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,OAAO,GAAG,CAAV,IAAeC,SAAnB,EAA8B;AAC5BI,MAAAA,UAAU,CAAC,MAAM;AACfD,QAAAA,gBAAgB,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAhB;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAJD,MAIO,IAAIN,OAAO,GAAG,CAAd,EAAiB;AACtBG,MAAAA,WAAW;AACZ;AACF,GARQ,EAQN,CAACH,OAAD,EAAUC,SAAV,EAAqBD,OAArB,CARM,CAAT;AAUA,sBACE;AAAA,2BACE;AAAA,qCAAqBA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMF,W;;KAAAA,W;AAoBN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nconst SimpleTimer = (props) => {\n  const { seconds, isStarted, stopTimer, timerSubmit, setTimeRemaining } = props\n\n  useEffect(() => {\n    if (seconds > 0 && isStarted) {\n      setTimeout(() => {\n        setTimeRemaining((time) => time - 1)\n      }, 1000)\n    } else if (seconds < 1) {\n      timerSubmit()\n    }\n  }, [seconds, isStarted, seconds])\n\n  return (\n    <div>\n      <h2>Time remaining: {seconds}</h2>\n    </div>\n  )\n}\n\nexport default SimpleTimer\n"]},"metadata":{},"sourceType":"module"}